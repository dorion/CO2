<?php

/**
 * @file
 * This is the install file of the CO2 module for Drupal system
 *
 */

/**
 * Implements hook_install()
 */
function co2_install() {
  drupal_install_schema('CO2');

  drupal_set_message(st('CO2 module installed successfully.'));
}

/**
 * Implements hook_uninstall().
 */
function co2_uninstall() {
  drupal_uninstall_schema('CO2');

  drupal_set_message(t('The CO2 module was uninstalled successfully.'));
}

/**
 * Implements hook_schema().
 */
function co2_schema() {
 /* $schema['co2_temp_log'] = array(
    'description' => t('Stores the log data temporaly.'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("Unique ID"),
      ),
      'conf_id' => array(
        'type' => 'int',
        'size' => 'big',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("The conference ID"),
      ),
      'targeted_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
        'not null' => TRUE,
        'description' => t("The persistent ID, which will be mapped to a drupal uid"),
      ),
      'idp' => array(
        'type' => 'varchar',
        'length' => 255,
        'default' => '',
        'description' => t("The IdP, the user got her creditentials"),
      ),
      'consentver' => array(
        'type' => 'varchar',
        'length' => 16,
        'default' => '',
        'description' => t("The version of terms and conditions, which was accepted by the user"),
      ),
      'created' => array(
        'type' => 'datetime',
        'description' => t("Date and time the mapping was created"),
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array('targeted_id' => array('targeted_id'), ),
  );
      

  $schema['shib_auth'] = array(
    'description' => t('Stores shibboleth authentication rules'),
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t("The id of the Shibboleth role assignment rule"),
      ),
      'field' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => t("The observed server variable."),
      ),
      'regexpression' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => t("The joint regular expression."),
      ),
      'role' => array(
        'type' => 'varchar',
        'length' => 128,
        'default' => '',
        'description' => t("The assigned role."),
      ),
      'sticky' => array(
        'type' => 'int',
        'length' => 1,
        'default' => 0,
        'description' => t("Sticky status"),
      ),
    ),
    'primary key' => array('id'),
  );
*/
  return $schema;
}

